<!-- DOCTYPE html -->
<html>
<head>
    <title>show_schema_of_local_admin</title>
	<meta charset="utf-8" />
	<HTA:APPLICATION
          APPLICATIONNAME="dbj_hta_test"
          ID="dbj_hta_test"
          VERSION="0.1"
          BORDER="dialog"
          ICON="favicon.ico"
          SCROLL="auto"
          SCROLLFLAT="yes"
          CONTEXTMENU="no"/>
</head>
<body>
    <div id="console">

    </div>
    <script type="text/javascript">
        //-------------------------------------------------------------------------------------------
        var global_prop_counter = 0
        var ad_sema = null;
        //-------------------------------------------------------------------------------------------
        function print (s) {
		   var ags =  [].slice.call( arguments );    
		   var tid = setTimeout( function (){
			   clearTimeout(tid);
			   for ( var j = 0; j  < ags.length; )
				 print.target(ags[j++]) ;
			 },0);
		return (void 0);
		}
		
		print.target = function (s_) { print_buffer_ += ("\n" + s_) ; }
		
        //-------------------------------------------------------------------------------------------
        function    print_buffer_flush() { console.innerText = print_buffer_; }
//      function    print(msg_) { print_buffer_ += "\n" + msg_; }
        var         print_buffer_ = (new Date()).toLocaleString();
        //--------------------------------------
		function dbj_microlib_loaded () {
		try {
		print("dbj_microlib_loaded");
				show_schema_of_local_admin();
			} catch (x) {
				alert( "Uncaught Exception: " + dbj.err2str(x) ) ;
			}
		}
        //--------------------------------------
        //
        function basic_net_info() {
            var network = new ActiveXObject("Wscript.Network");
            return basic_net_info = {
                'computer'  : network.ComputerName,
                'domain'    : network.UserDomain,
                'user'      : network.UserName
            };
        }
        //-------------------------------------------------------------------------------------------
        function show_schema_of_local_admin() {
            adOBJ = GetObject("WinNT://./admin,user");
            ad_sema = GetObject(adOBJ.Schema);
            //print("Props of adOBJ") ;
            //base_props( adOBJ ) ;
            print("Attributes of " + adOBJ.AdsPath + " Schema");
            //base_props( ad_sema ) ;
            print("Mandatory attributes:");
            foreach(ad_sema.MandatoryProperties, enumProperties)
            print("\nOptional attributes:");
            foreach(ad_sema.OptionalProperties, enumProperties)
            print_buffer_flush();
        }
        //-------------------------------------------------------------------------------------------
        function enumProperties(strAttribute, x) {
            global_prop_counter += 1
            try {
//                var objAttribute = ad_sema.GetObject("Property", strAttribute)
//                print(" (Syntax: " + objAttribute.Syntax + ")")
//                print(objAttribute.MultiValued ? " Multivalued" : " Single-valued");

                adOBJ.GetInfoEx(strAttribute, 0);
                print(global_prop_counter + "\t" + strAttribute + " :: " + adOBJ[strAttribute]);

            } catch (x) {
                      print("EXCEPTION in enumProperties():\t" + dbj.err2str(x) );
            }
        }
        //-------------------------------------------------------------------------------------------
        function base_props(ad_object, x) {
            try {
                print(
                    "\nBase Properties : " +
                    "\nName\t:\t" + ad_object.Name +
                    "\nClass\t:\t" + ad_object.Class +
                    "\nAD Path\t:\t" + ad_object.AdsPath
                    );
            } catch (x) {
                   print("EXCEPTION in base_props():\t" + dbj.err2str(x) );
            }
        }
        //-------------------------------------------------------------------------------------------
        function foreach(collection, FP, x) {
            function try_call(FP, arg, x) {
                try {
                    FP(arg);
                } catch (x) {
                    print("EXCEPTION in try_call():\t" + dbj.err2str(x) );
                }
            }

            try {
                if ("undefined" != typeof (collection.toArray)) {
                    var arr = collection.toArray();
                    for (var j = 0 ; j < arr.length; j++) {

                        try_call(FP, arr[j]);
                    }
                }
                else {
                    for (var E = new Enumerator(collection) ; !E.atEnd() ; E.moveNext()) {
                        try_call(FP, E.item());
                    }
                }
            } catch (x) {
                                  print("EXCEPTION in foreach():\t" + dbj.err2str(x) );
                try {
                    if ((collection != null) && (typeof (collection.constructor) != "undefined"))
                        print("\nCollection argument is\t:\t" + collection.constructor);
                    else
                        print("\nCollection argument is\t:\tNULL");
                } catch (x) { }
            }
        }
        //-------------------------------------------------------------------------------------------
        // 
        //-------------------------------------------------------------------------------------------

    </script>
<script src="D:\GitHub\HTA\pingpainter\js\jquery.min.js"></script>	
<script id="dbj_microlib" type="text/javascript" >
        //--------------------------------------
		onload = function () {
			$.getScript( "http://raw.githubusercontent.com/DBJDBJ/JSK/master/dbj.microlib.min.js" )
			  .done(function( script, textStatus ) {
				print( textStatus );
				dbj_microlib_loaded();
			  })
			  .fail(function( jqxhr, settings, exception ) {
				print( "Triggered ajaxError handler. Exception: " + exception );
			});
			
			print_buffer_flush();
		}

</script>		  
</body>
</html>
